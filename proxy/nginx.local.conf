upstream users_backend {
    server users:8080 max_fails=3 fail_timeout=30s;
}

upstream ping_backend {
    server ping:8080 max_fails=3 fail_timeout=30s;
}

server {
    listen 8080;
    server_name _; # Listen to any host

    set $cors_origin "http://localhost:3000";

    location /users {
        # --- CORS HEADERS for /users ---
        if ($request_method = 'OPTIONS') {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Max-Age" 1728000 always;
            add_header "Content-Type" "text/plain; charset=utf-8" always;
            add_header "Content-Length" 0 always;
            return 204;
        }

        # Handle actual GET/POST requests for this location
        if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS" always; # Methods relevant to the actual request
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range" always;
        }
        # --- End CORS HEADERS for /users ---

        proxy_pass http://users_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    location /ping {
        # --- CORS HEADERS for /ping ---
        if ($request_method = 'OPTIONS') {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Max-Age" 1728000 always;
            add_header "Content-Type" "text/plain; charset=utf-8" always;
            add_header "Content-Length" 0 always;
            return 204;
        }
        if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range" always;
        }
        # --- End CORS HEADERS for /ping ---

        proxy_pass http://ping_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
}
