upstream users_backend {
    server users-service:443 max_fails=3 fail_timeout=30s;
}

upstream ping_backend {
    server ping-service:443 max_fails=3 fail_timeout=30s;
}

server {
    listen 8080;
    server_name _;
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    set $cors_origin "https://portal.thoughtgears.dev";


    location /users {
        # --- CORS HEADERS for /users ---
        if ($request_method = 'OPTIONS') {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Max-Age" 1728000 always;
            add_header "Content-Type" "text/plain; charset=utf-8" always;
            add_header "Content-Length" 0 always;
            return 204;
        }

        # Handle actual GET/POST requests for this location
        if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS" always; # Methods relevant to the actual request
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range" always;
        }
        # --- End CORS HEADERS for /users ---

        proxy_pass https://users_backend;
        proxy_ssl_verify on;
        proxy_ssl_server_name on;
        proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
        proxy_ssl_name users-service;
        proxy_set_header Host "users-service";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    location /ping {
        # --- CORS HEADERS for /ping ---
        if ($request_method = 'OPTIONS') {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Max-Age" 1728000 always;
            add_header "Content-Type" "text/plain; charset=utf-8" always;
            add_header "Content-Length" 0 always;
            return 204;
        }
        if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin" "$cors_origin" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range" always;
        }
        # --- End CORS HEADERS for /ping ---

        proxy_pass https://ping_backend;
        proxy_ssl_verify on;
        proxy_ssl_server_name on;
        proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
        proxy_ssl_name ping-service;
        proxy_set_header Host "ping-service";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }


    location / {
        return 404;
    }
}
